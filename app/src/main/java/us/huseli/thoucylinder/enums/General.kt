package us.huseli.thoucylinder.enums

import android.content.Context
import androidx.annotation.StringRes
import us.huseli.thoucylinder.R
import us.huseli.thoucylinder.getUmlautifiedString

enum class AlbumType(@StringRes val stringRes: Int) {
    ALBUM(R.string.album),
    EP(R.string.ep),
    SINGLE(R.string.single),
    COMPILATION(R.string.compilation),
}

enum class AvailabilityFilter(@StringRes val stringRes: Int) {
    ALL(R.string.all),
    ONLY_PLAYABLE(R.string.only_playable),
    ONLY_LOCAL(R.string.only_local),
}

enum class ListUpdateStrategy { MERGE, REPLACE }

enum class PlaybackState { STOPPED, PLAYING, PAUSED }

enum class RadioStatus { INACTIVE, LOADING, LOADING_MORE, LOADED }

enum class RadioType(@StringRes val stringRes: Int) {
    LIBRARY(R.string.library),
    ARTIST(R.string.artist),
    ALBUM(R.string.album),
    TRACK(R.string.track),
}

enum class Region(@StringRes val stringRes: Int, val extended: Boolean = false) {
    AD(R.string.andorra, true),
    AE(R.string.united_arab_emirates),
    AF(R.string.afghanistan, true),
    AG(R.string.antigua_and_barbuda, true),
    AI(R.string.anguilla, true),
    AL(R.string.albania, true),
    AM(R.string.armenia, true),
    AN(R.string.netherlands_antilles, true),
    AO(R.string.angola, true),
    AQ(R.string.antarctica, true),
    AR(R.string.argentina),
    AS(R.string.american_samoa, true),
    AT(R.string.austria),
    AU(R.string.australia),
    AW(R.string.aruba, true),
    AX(R.string.aland_islands, true),
    AZ(R.string.azerbaijan),
    BA(R.string.bosnia_and_herzegovina),
    BB(R.string.barbados, true),
    BD(R.string.bangladesh, true),
    BE(R.string.belgium),
    BF(R.string.burkina_faso, true),
    BG(R.string.bulgaria),
    BH(R.string.bahrain),
    BI(R.string.burundi, true),
    BJ(R.string.benin, true),
    BL(R.string.saint_barthelemy, true),
    BM(R.string.bermuda, true),
    BN(R.string.brunei, true),
    BO(R.string.bolivia, true),
    BQ(R.string.bonaire_sint_eustatius_and_saba, true),
    BR(R.string.brazil),
    BS(R.string.bahamas, true),
    BT(R.string.bhutan, true),
    BV(R.string.bouvet_island, true),
    BW(R.string.botswana, true),
    BY(R.string.belarus),
    BZ(R.string.belize, true),
    CA(R.string.canada),
    CC(R.string.cocos_keeling_islands, true),
    CD(R.string.democratic_republic_of_the_congo, true),
    CF(R.string.central_african_republic, true),
    CG(R.string.congo, true),
    CH(R.string.switzerland),
    CI(R.string.cote_divoire, true),
    CK(R.string.cook_islands, true),
    CL(R.string.chile),
    CM(R.string.cameroon, true),
    CN(R.string.china, true),
    CO(R.string.colombia),
    CR(R.string.costa_rica, true),
    CS(R.string.serbia_and_montenegro, true),
    CU(R.string.cuba, true),
    CV(R.string.cape_verde, true),
    CW(R.string.curacao, true),
    CX(R.string.christmas_island, true),
    CY(R.string.cyprus, true),
    CZ(R.string.czech_republic),
    DE(R.string.germany),
    DJ(R.string.djibouti, true),
    DK(R.string.denmark),
    DM(R.string.dominica, true),
    DO(R.string.dominican_republic, true),
    DZ(R.string.algeria),
    EC(R.string.ecuador, true),
    EE(R.string.estonia),
    EG(R.string.egypt),
    EH(R.string.western_sahara, true),
    ER(R.string.eritrea, true),
    ES(R.string.spain),
    ET(R.string.ethiopia, true),
    FI(R.string.finland),
    FJ(R.string.fiji, true),
    FK(R.string.falkland_islands, true),
    FM(R.string.federated_states_of_micronesia, true),
    FO(R.string.faroe_islands, true),
    FR(R.string.france),
    GA(R.string.gabon, true),
    GB(R.string.united_kingdom),
    GD(R.string.grenada, true),
    GE(R.string.georgia),
    GF(R.string.french_guiana, true),
    GG(R.string.guernsey, true),
    GH(R.string.ghana),
    GI(R.string.gibraltar, true),
    GL(R.string.greenland, true),
    GM(R.string.gambia, true),
    GN(R.string.guinea, true),
    GP(R.string.guadeloupe, true),
    GQ(R.string.equatorial_guinea, true),
    GR(R.string.greece),
    GS(R.string.south_georgia_and_the_south_sandwich_islands, true),
    GT(R.string.guatemala, true),
    GU(R.string.guam, true),
    GW(R.string.guinea_bissau, true),
    GY(R.string.guyana, true),
    HK(R.string.hong_kong),
    HM(R.string.heard_island_and_mcdonald_islands, true),
    HN(R.string.honduras, true),
    HR(R.string.croatia),
    HT(R.string.haiti, true),
    HU(R.string.hungary),
    ID(R.string.indonesia),
    IE(R.string.ireland),
    IL(R.string.israel),
    IM(R.string.isle_of_man, true),
    IN(R.string.india),
    IO(R.string.british_indian_ocean_territory, true),
    IQ(R.string.iraq),
    IR(R.string.iran, true),
    IS(R.string.iceland),
    IT(R.string.italy),
    JE(R.string.jersey, true),
    JM(R.string.jamaica),
    JO(R.string.jordan),
    JP(R.string.japan),
    KE(R.string.kenya),
    KG(R.string.kyrgyzstan, true),
    KH(R.string.cambodia, true),
    KI(R.string.kiribati, true),
    KM(R.string.comoros, true),
    KN(R.string.saint_kitts_and_nevis, true),
    KP(R.string.north_korea, true),
    KR(R.string.south_korea),
    KW(R.string.kuwait),
    KY(R.string.cayman_islands, true),
    KZ(R.string.kazakhstan),
    LA(R.string.laos, true),
    LB(R.string.lebanon),
    LC(R.string.saint_lucia, true),
    LI(R.string.liechtenstein, true),
    LK(R.string.sri_lanka),
    LR(R.string.liberia, true),
    LS(R.string.lesotho, true),
    LT(R.string.lithuania),
    LU(R.string.luxembourg),
    LV(R.string.latvia),
    LY(R.string.libya),
    MA(R.string.morocco),
    MC(R.string.monaco, true),
    MD(R.string.moldova, true),
    ME(R.string.montenegro),
    MF(R.string.saint_martin_french_part, true),
    MG(R.string.madagascar, true),
    MH(R.string.marshall_islands, true),
    MK(R.string.north_macedonia),
    ML(R.string.mali, true),
    MM(R.string.myanmar, true),
    MN(R.string.mongolia, true),
    MO(R.string.macao, true),
    MP(R.string.northern_mariana_islands, true),
    MQ(R.string.martinique, true),
    MR(R.string.mauritania, true),
    MS(R.string.montserrat, true),
    MT(R.string.malta, true),
    MU(R.string.mauritius, true),
    MV(R.string.maldives, true),
    MW(R.string.malawi, true),
    MX(R.string.mexico),
    MY(R.string.malaysia),
    MZ(R.string.mozambique, true),
    NA(R.string.namibia, true),
    NC(R.string.new_caledonia, true),
    NE(R.string.niger, true),
    NF(R.string.norfolk_island, true),
    NG(R.string.nigeria),
    NI(R.string.nicaragua, true),
    NL(R.string.netherlands),
    NO(R.string.norway),
    NP(R.string.nepal),
    NR(R.string.nauru, true),
    NU(R.string.niue, true),
    NZ(R.string.new_zealand),
    OM(R.string.oman),
    PA(R.string.panama, true),
    PE(R.string.peru),
    PF(R.string.french_polynesia, true),
    PG(R.string.papua_new_guinea, true),
    PH(R.string.philippines),
    PK(R.string.pakistan),
    PL(R.string.poland),
    PM(R.string.saint_pierre_and_miquelon, true),
    PN(R.string.pitcairn, true),
    PR(R.string.puerto_rico),
    PS(R.string.palestine, true),
    PT(R.string.portugal),
    PW(R.string.palau, true),
    PY(R.string.paraguay, true),
    QA(R.string.qatar),
    RE(R.string.reunion, true),
    RO(R.string.romania),
    RS(R.string.serbia),
    RU(R.string.russia),
    RW(R.string.rwanda, true),
    SA(R.string.saudi_arabia),
    SB(R.string.solomon_islands, true),
    SC(R.string.seychelles, true),
    SD(R.string.sudan, true),
    SE(R.string.sweden),
    SG(R.string.singapore),
    SH(R.string.saint_helena_ascension_and_tristan_da_cunha, true),
    SI(R.string.slovenia),
    SJ(R.string.svalbard_and_jan_mayen, true),
    SK(R.string.slovakia),
    SL(R.string.sierra_leone, true),
    SM(R.string.san_marino, true),
    SN(R.string.senegal),
    SO(R.string.somalia, true),
    SR(R.string.suriname, true),
    SS(R.string.south_sudan, true),
    ST(R.string.sao_tome_and_principe, true),
    SU(R.string.soviet_union, true),
    SV(R.string.el_salvador, true),
    SX(R.string.sint_maarten_dutch_part, true),
    SY(R.string.syria, true),
    SZ(R.string.eswatini, true),
    TC(R.string.turks_and_caicos_islands, true),
    TD(R.string.chad, true),
    TF(R.string.french_southern_territories, true),
    TG(R.string.togo, true),
    TH(R.string.thailand),
    TJ(R.string.tajikistan, true),
    TK(R.string.tokelau, true),
    TL(R.string.timor_leste, true),
    TM(R.string.turkmenistan, true),
    TN(R.string.tunisia),
    TO(R.string.tonga, true),
    TR(R.string.turkey),
    TT(R.string.trinidad_and_tobago, true),
    TV(R.string.tuvalu, true),
    TW(R.string.taiwan),
    TZ(R.string.tanzania),
    UA(R.string.ukraine),
    UG(R.string.uganda),
    UM(R.string.united_states_minor_outlying_islands, true),
    US(R.string.united_states),
    UY(R.string.uruguay, true),
    UZ(R.string.uzbekistan, true),
    VA(R.string.vatican_city, true),
    VC(R.string.saint_vincent_and_the_grenadines, true),
    VE(R.string.venezuela, true),
    VG(R.string.british_virgin_islands, true),
    VI(R.string.us_virgin_islands, true),
    VN(R.string.vietnam),
    VU(R.string.vanuatu, true),
    WF(R.string.wallis_and_futuna, true),
    WS(R.string.samoa, true),
    XC(R.string.czechoslovakia, true),
    XE(R.string.europe, true),
    XG(R.string.east_germany, true),
    XK(R.string.kosovo, true),
    XW(R.string.worldwide, true),
    YE(R.string.yemen),
    YT(R.string.mayotte, true),
    YU(R.string.yugoslavia, true),
    ZA(R.string.south_africa),
    ZM(R.string.zambia, true),
    ZW(R.string.zimbabwe);

    companion object {
        fun filteredEntries(context: Context, filter: String?, extended: Boolean = false): List<Region> = entries
            .filter { extended || !it.extended }
            .filter { filter == null || context.getString(it.stringRes).contains(filter, true) }
    }
}

fun Context.getRegionName(code: String): String = try {
    getUmlautifiedString(Region.valueOf(code).stringRes)
} catch (_: IllegalArgumentException) {
    code
}
